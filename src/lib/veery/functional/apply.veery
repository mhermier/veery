
class Apply {
  static call(args, fn) {
    var count = args.count
    if (count ==  0) return fn.call()
    if (count ==  1) return fn.call(args[0])
    if (count ==  2) return fn.call(args[0], args[1])
    if (count ==  3) return fn.call(args[0], args[1], args[2])
    if (count ==  4) return fn.call(args[0], args[1], args[2], args[3])
    if (count ==  5) return fn.call(args[0], args[1], args[2], args[3], args[4])
    if (count ==  6) return fn.call(args[0], args[1], args[2], args[3], args[4], args[5])
    if (count ==  7) return fn.call(args[0], args[1], args[2], args[3], args[4], args[5], args[6])
    if (count ==  8) return fn.call(args[0], args[1], args[2], args[3], args[4], args[5], args[6], args[7])
    if (count ==  9) return fn.call(args[0], args[1], args[2], args[3], args[4], args[5], args[6], args[7], args[8])
    if (count == 10) return fn.call(args[0], args[1], args[2], args[3], args[4], args[5], args[6], args[7], args[8], args[9])
    if (count == 11) return fn.call(args[0], args[1], args[2], args[3], args[4], args[5], args[6], args[7], args[8], args[9], args[10])
    if (count == 12) return fn.call(args[0], args[1], args[2], args[3], args[4], args[5], args[6], args[7], args[8], args[9], args[10], args[11])
    if (count == 13) return fn.call(args[0], args[1], args[2], args[3], args[4], args[5], args[6], args[7], args[8], args[9], args[10], args[11], args[12])
    if (count == 14) return fn.call(args[0], args[1], args[2], args[3], args[4], args[5], args[6], args[7], args[8], args[9], args[10], args[11], args[12], args[13])
    if (count == 15) return fn.call(args[0], args[1], args[2], args[3], args[4], args[5], args[6], args[7], args[8], args[9], args[10], args[11], args[12], args[13], args[14])
    if (count == 16) return fn.call(args[0], args[1], args[2], args[3], args[4], args[5], args[6], args[7], args[8], args[9], args[10], args[11], args[12], args[13], args[14], args[15])

    Fiber.abort("Methods cannot have more than 16 parameters.")
  }
}
