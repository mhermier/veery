
import "veery/compiler/abstract_lang/token_type" for TokenType;

class Token {
  construct new(source, type, start, length) {
    _source = source;
    _type = type;
    _start = start;
    _length = length;
  }

  == (other) {
    if (other is String) { // FIXME TokenType
      return _type == other;
    }

    return this === other;
  }
  != (other) { return !(this == other) }

  // The source file this token was parsed from.
  source { return _source }
  type { return _type }
  text { return _source.substring(_start, _length) }

  start { return _start }
  length { return _length }

  // The 1-based line number that the token starts on.
  lineStart { return _source.lineAt(_start) }
  lineEnd { return _source.lineAt(_start + _length) }

  // The 1-based column number that the token starts on.
  columnStart { return _source.columnAt(_start) }
  columnEnd { return _source.columnAt(_start + _length) }

  toString { return text.toString }
}
